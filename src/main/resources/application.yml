# If none are explicitly active when the application context starts, the default profiles are activated.
# So, in the following YAML, we set a value for spring.security.user.password that is available only in the "default" profile
# https://www.mkyong.com/spring/spring-propertysources-example/
# parkjs:
# # 반드시 클론(:)뒤에 스페이스바를 넣어줘야함.(어짜피 내부적으로 .yml -> .properties 형식으로 변환한다.)
#     name: park_yml_profile_none
# ---
# https://docs.spring.io/spring-boot/docs/2.1.3.RELEASE/reference/htmlsingle/#howto-change-configuration-depending-on-the-environment

# Relaxed binding


# Ctrl + space : 인텔리전스 제공 !!!!!!!!!!
# 아래의 'testproperties' 의 경우에는 기본적으로 제공하지 않는 property 이므로 경고(?)하고 있다.


# application.yml 의 spring.profiles.active 보다 commandlineargs의 '--spring.profiles.active'가 우선순위가 더 높다. (commandlineargs > application.yml)
spring:
    profiles:
      active: prod
    output:
      ansi:
          enabled: ALWAYS
# logging.file 과 logging.path 둘 다 작성되어있을 경우 logging.file 이 우선순위를 갖는다. --> logging.file 에 경로를 조합해도 된다.
# logging:
#   file: bksbootlog.log
#     max-history: 10
#     max-size: 20m
#   path: ./logs/
---
spring:
    profiles: default
    # output:
    #   ansi:
    #       enabled: ALWAYS
testproperties:
    time1: 1000
    time2: PT10H
    time3: 10s
    number1: 10
    number2: ${testproperties.time1}
    work-for: home_default
    whereToGo: where_to_go_default
    foo_bar: foobar_default
    name: park_yml_profile_default
    pojoList:
        - name: pojo1_name_default
          desc: pojo1_desc_default
        - name: pojo2_name_default
          desc: pojo2_desc_default
# spring.output.ansi.enabled=always ?????
# output:
#     ansi:
#         enabled: always ?????
---
spring:
    profiles: prod
testproperties:
    time1: 9000
    time2: PT90H
    time3: 90s
    number1: 90
    number2: ${testproperties.time1}
    work-for: home_prod
    whereToGo: where_to_go_prod
    foo_bar: foobar_prod
    name: park_yml_profile_prod
    pojoList:
        - name: pojo1_name_prod
          desc: pojo1_desc_prod
        - name: pojo2_name_prod
          desc: pojo2_desc_prod
---
spring:
    profiles: dev
testproperties:
    time1: 3000
    time2: PT30H
    time3: 30s
    number1: 30
    number2: ${testproperties.time1}
    work-for: home_dev
    whereToGo: where_to_go_dev
    foo_bar: foobar_dev
    name: park_yml_profile_dev
    pojoList:
        - name: pojo1_name_dev
          desc: pojo1_desc_dev
        - name: pojo2_name_dev
          desc: pojo2_desc_dev